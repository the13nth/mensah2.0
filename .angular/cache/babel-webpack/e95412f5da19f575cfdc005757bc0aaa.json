{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Storage } from '@capacitor/storage';\nimport { INTRO_KEY } from '../introduction/introduction.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/fire/compat/database\";\nimport * as i3 from \"@ionic/angular\";\nexport let Tab1Page = /*#__PURE__*/(() => {\n  class Tab1Page {\n    constructor(http, db) {\n      this.http = http;\n      this.db = db;\n    }\n\n    ngOnInit() {\n      console.log(\"on init loaded\");\n      this.getpassengers();\n    }\n\n    resetIntro() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield Storage.remove({\n          key: INTRO_KEY\n        });\n      });\n    }\n\n    getpassengers() {\n      //run function every 10 seconds\n      setInterval(() => {\n        10;\n      }, 10000);\n      this.livedemopassengers = this.db.list('current-passengers');\n      console.log(this.livedemopassengers);\n      this.livedemopassengers.valueChanges().subscribe(data => {\n        this.pdata = data;\n        this.livepassengercount = this.pdata[this.pdata.length - 1][0];\n        this.livepassengercounttime = this.pdata[this.pdata.length - 1][1];\n        this.livepassengercountlocation = this.pdata[this.pdata.length - 1][2];\n        console.log('Number of passengers last sub:', this.livepassengercount); //return this.livedemopassengers.valueChanges();\n      });\n    }\n\n  }\n\n  Tab1Page.ɵfac = function Tab1Page_Factory(t) {\n    return new (t || Tab1Page)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AngularFireDatabase));\n  };\n\n  Tab1Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Tab1Page,\n    selectors: [[\"app-tab1\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[\"color\", \"primary\"], [1, \"grid\"], [1, \"card-lines\"], [\"noline\", \"\"]],\n    template: function Tab1Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelementStart(2, \"ion-title\");\n        i0.ɵɵtext(3, \" Entities \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-content\");\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵelementStart(6, \"ion-card\", 2);\n        i0.ɵɵelementStart(7, \"ion-card-header\");\n        i0.ɵɵelementStart(8, \"ion-card-subtitle\");\n        i0.ɵɵtext(9, \"Your closest bus station is:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-card-title\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-card-content\");\n        i0.ɵɵelementStart(13, \"ion-list\");\n        i0.ɵɵelementStart(14, \"ion-item\", 3);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-item\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.livepassengercountlocation);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" Number of passengers: \", ctx.livepassengercount, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Last checked: \", ctx.livepassengercounttime, \" \");\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonTitle, i3.IonContent, i3.IonCard, i3.IonCardHeader, i3.IonCardSubtitle, i3.IonCardTitle, i3.IonCardContent, i3.IonList, i3.IonItem],\n    styles: [\"ion-content[_ngcontent-%COMP%]   ion-toolbar[_ngcontent-%COMP%]{--background: translucent}.grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(50%,1fr));grid-gap:10px;grid-auto-rows:minmax(100px,auto)}\"]\n  });\n  return Tab1Page;\n})();","map":null,"metadata":{},"sourceType":"module"}